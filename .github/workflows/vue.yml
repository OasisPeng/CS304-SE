name: Vue Deploy

on:
  push:
    branches:
      - master
    paths:
      - 'frontend/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '17.9.1'

      - name: Install dependencies
        run: |
          cd ./frontend/cs304
          npm install

      - name: Build
        run: |
          cd ./frontend/cs304
          npm run build
          
      - name: Build docker image
        run: |       
          cd ./frontend/cs304                  # run：该步骤要执行的命令，| 代表可以有多条命令
      
          docker build -t front .   # 构建docker镜像，命令最后的点代表Dockerfile所在目录
          docker save -o front.tar front # 保存压缩后的docker镜像，这一步是为了方便后面我们将该镜像上传至指定的服务器
          ls

      - name: delete old docker image
        run: |
          cd ./frontend/cs304
          sshpass -p ${{secrets.REMOTE_SERVER01_PWD}} ssh -o StrictHostKeyChecking=no root@${{secrets.REMOTE_SERVER01_IP}} "docker stop front || true && docker rm front || true && docker rmi front || true"
      
            # 删除旧的docker镜像压缩包
      - name: delete old docker tar
        run: |
          cd ./frontend/cs304
          sshpass -p ${{secrets.REMOTE_SERVER01_PWD}} ssh -o StrictHostKeyChecking=no root@${{secrets.REMOTE_SERVER01_IP}} "cd ${{secrets.REMOTE_PROJECT_CATALOGUE}} && rm -f front.tar"
            # 上传新的docker镜像
      - name: upload new docker image and start-up script
        run: |
          cd ./frontend/cs304
          sshpass -p ${{secrets.REMOTE_SERVER01_PWD}} scp -r -o StrictHostKeyChecking=no ./front.tar root@${{secrets.REMOTE_SERVER01_IP}}:${{secrets.REMOTE_PROJECT_CATALOGUE}}
            # 加载tar文件，加载docker镜像
      - name: load new docker image
        run: sshpass -p ${{secrets.REMOTE_SERVER01_PWD}} ssh -o StrictHostKeyChecking=no root@${{secrets.REMOTE_SERVER01_IP}} "docker load -i ${{secrets.REMOTE_PROJECT_CATALOGUE}}/front.tar"
            # docker run 运行，启动容器
      - name: run project
        run: sshpass -p ${{secrets.REMOTE_SERVER01_PWD}} ssh -o StrictHostKeyChecking=no root@${{secrets.REMOTE_SERVER01_IP}} "docker run -d -p 8080:8080 --name front front"